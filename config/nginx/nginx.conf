user  nginx;
worker_processes  1;
# error_log  /var/log/nginx/error.log warn;
# debug warn
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  sendfile        off;
  #tcp_nopush     on;
  keepalive_timeout  65;

  #
  gzip  on;
  gzip_types application/json text/plain;
  # note: text/html responses are always compressed when gzip is on.

	map $http_upgrade $connection_upgrade {
	  default upgrade;
	  '' close;
	}

	server {
	  listen 80;

    root /var/www/nginx;
    index index.html;

	  location / {
		# Pass the request on
		# proxy_pass http://html;

		# Pass a bunch of headers to the downstream server, so they'll know what's going on.
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

		# Most web apps can be configured to read this header and understand that the
		#	current session is actually HTTPS.
		# proxy_set_header X-Forwarded-Proto https;
		# proxy_set_header HTTPS on;

		# We expect the downsteam servers to redirect to the right hostname, so don't do any rewrites here.
		proxy_redirect off;

		# access_log /var/log/nginx/access.log  main;
		access_log on;
		# open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;
	  }
	}
}
